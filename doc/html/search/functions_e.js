var searchData=
[
  ['selectcommunicator',['selectCommunicator',['../classSpaCommunicator.html#a063bb5ab2b09a46dbf296d151edae289',1,'SpaCommunicator']]],
  ['send',['send',['../classSpaCommunicator.html#a4a6decf46398e6a749767d75e429c263',1,'SpaCommunicator::send(SpaMessage *message)'],['../classSpaCommunicator.html#a349e67dbbea6ee9abae289729a90f2ba',1,'SpaCommunicator::send(ssize_t len, SpaMessage *message)'],['../classSpaCommunicator.html#ab8ad476b9d99685eccca336c2eb4d87c',1,'SpaCommunicator::send(SpaMessage *message, ssize_t len)']]],
  ['senddata',['sendData',['../classCOMP__NAME.html#ac981fe25a24ee01c160d08f0a970fab1',1,'COMP_NAME::sendData()'],['../classComponent.html#a492a20dc97b9563d80443dda2f1057ec',1,'Component::sendData()']]],
  ['sendmsg',['sendMsg',['../classComponent.html#a4fe6afd53663b5c1d3b60977024bc86a',1,'Component::sendMsg()'],['../classLocalCommunicator.html#afb8fc8a82069dac7bf08f736fa76c4c8',1,'LocalCommunicator::sendMsg()'],['../classPhysicalCommunicator.html#a9fc5595b693f9908a20d0e64a6579bb5',1,'PhysicalCommunicator::sendMsg()']]],
  ['sendpayload',['sendPayload',['../classComponent.html#afc9525526fdc44c64873abf80357c3be',1,'Component::sendPayload(std::string payload, LogicalAddress destination)'],['../classComponent.html#af7ee2839809098ffd50029375aa3e5a7',1,'Component::sendPayload(T payload, LogicalAddress destination)']]],
  ['serversend',['serverSend',['../classLocalCommunicator.html#a6175c2c35727bb081c5f518e1750dd86',1,'LocalCommunicator']]],
  ['serversocket_5ferror',['serverSocket_error',['../serverSocket_8cpp.html#af09c0f79b601381403abd033657a32e9',1,'serverSocket.cpp']]],
  ['serversocket_5fhandlecourier',['serverSocket_handleCourier',['../serverSocket_8cpp.html#aa2e2b9e473ff1b6426d2942634365bc5',1,'serverSocket.cpp']]],
  ['serversocket_5flisten',['serverSocket_listen',['../serverSocket_8cpp.html#a759aa71416137013a9577edd20004470',1,'serverSocket_listen(cubiumServerSocket_t *s, std::function&lt; void(cubiumServerSocket_t *)&gt; func):&#160;serverSocket.cpp'],['../serverSocket_8hpp.html#a934718631ad1c0230dcf95e6447d103a',1,'serverSocket_listen(cubiumServerSocket_t *port, std::function&lt; void(cubiumServerSocket_t *)&gt; func):&#160;serverSocket.cpp']]],
  ['serversocket_5fopensocket',['serverSocket_openSocket',['../serverSocket_8cpp.html#ac2270317bfddf717d50f3092735c5175',1,'serverSocket_openSocket(uint16_t port):&#160;serverSocket.cpp'],['../serverSocket_8hpp.html#ac2270317bfddf717d50f3092735c5175',1,'serverSocket_openSocket(uint16_t port):&#160;serverSocket.cpp']]],
  ['serversocket_5fsend',['serverSocket_send',['../serverSocket_8cpp.html#a3f5a8b6b026df19bbff7255d69fd4fd0',1,'serverSocket_send(const void *msg, size_t len, cubiumServerSocket_t *s):&#160;serverSocket.cpp'],['../serverSocket_8hpp.html#a3f5a8b6b026df19bbff7255d69fd4fd0',1,'serverSocket_send(const void *msg, size_t len, cubiumServerSocket_t *s):&#160;serverSocket.cpp']]],
  ['setserversock',['setServerSock',['../classLocalCommunicator.html#a3321b932c8c555587b8b3200bc4dfcdb',1,'LocalCommunicator']]],
  ['size',['size',['../classRoutingTable.html#a171f5d7e7f84b4415eae14f2161fc2e9',1,'RoutingTable']]],
  ['spacommunicator',['SpaCommunicator',['../classSpaCommunicator.html#a4ed78daf6517b608f93dd894b65dab55',1,'SpaCommunicator::SpaCommunicator(LogicalAddress currentAddress)'],['../classSpaCommunicator.html#a09fa278da37e95831a04896ec24dd227',1,'SpaCommunicator::SpaCommunicator(LogicalAddress currentAddress, std::vector&lt; std::shared_ptr&lt; PhysicalCommunicator &gt;&gt; comms)']]],
  ['spacourier',['SpaCourier',['../structSpaCourier.html#a79c58c501a8b0f5dbde22e7d3f526db2',1,'SpaCourier::SpaCourier(LogicalAddress destination, LogicalAddress source, ssize_t followerSize)'],['../structSpaCourier.html#ac773f210ab350c0e8557c67cbc1b3971',1,'SpaCourier::SpaCourier(uint8_t version, uint8_t priority, uint16_t length, LogicalAddress destination, LogicalAddress source, uint16_t flags, ssize_t fS)']]],
  ['spadata',['SpaData',['../structSpaData.html#a5039d8b49c2afb236fdaacc27341f8ce',1,'SpaData::SpaData(LogicalAddress consumerAddress, LogicalAddress producerAddress, T payload)'],['../structSpaData.html#ae9bf86197e7b21b5a37a1e1b2de76320',1,'SpaData::SpaData(uint8_t version, uint8_t priority, LogicalAddress producerAddress, LogicalAddress consumerAddress, uint16_t dialogId, uint16_t sequenceIndex, uint16_t sequenceCount, uint8_t interfaceId, uint8_t messageId, T payload)']]],
  ['spaheader',['SpaHeader',['../structSpaHeader.html#ae285cc7f5785c5d5940ae05a4e93a4f9',1,'SpaHeader::SpaHeader(uint8_t version=0, uint8_t priority=0, uint16_t length=0, LogicalAddress destination=LogicalAddress(0, 0), LogicalAddress source=LogicalAddress(0, 0), uint16_t flags=0, uint8_t opcode=0)'],['../structSpaHeader.html#a478d40ca88735ff0de2ea92fa2be14f8',1,'SpaHeader::SpaHeader(LogicalAddress destination, uint8_t opcode)']]],
  ['spalocalheader',['SpaLocalHeader',['../structSpaLocalHeader.html#a75305564cd983142afd4f41bbe29a4bc',1,'SpaLocalHeader']]],
  ['spamessage',['SpaMessage',['../structSpaMessage.html#ac3106c80ebd5c60d0e939c76f77ef0cd',1,'SpaMessage::SpaMessage(LogicalAddress destination, uint8_t opcode)'],['../structSpaMessage.html#ade633a9b5780d7d361493d30aaa227ff',1,'SpaMessage::SpaMessage(uint8_t version=0, uint8_t priority=0, uint16_t length=0, LogicalAddress destination=LogicalAddress(0, 0), LogicalAddress source=LogicalAddress(0, 0), uint16_t flags=0, uint8_t opcode=0)']]],
  ['subnetmanager',['SubnetManager',['../classSubnetManager.html#af60bbdf2417a03b1e2fb14a5b077597a',1,'SubnetManager']]],
  ['subscribe',['subscribe',['../classComponent.html#a55c74b1c2dcde114cb329ae43a4cd04a',1,'Component::subscribe(LogicalAddress producer)'],['../classComponent.html#abae1852e26a7bee748898ea8ef6f4fb9',1,'Component::subscribe(LogicalAddress producer, uint8_t priority, uint32_t leasePeriod, uint16_t deliveryRateDivisor)']]],
  ['subscriber',['Subscriber',['../structSubscriber.html#a64dab4d8803d8814bf7a6e7162a2b436',1,'Subscriber']]],
  ['subscriptionreply',['SubscriptionReply',['../structSubscriptionReply.html#a8b41ba60bc85ee15f7bddbaec3260ad0',1,'SubscriptionReply::SubscriptionReply(LogicalAddress destination, LogicalAddress source)'],['../structSubscriptionReply.html#a8e656028ab7b6750157b6d0ebbf06659',1,'SubscriptionReply::SubscriptionReply(uint8_t version, uint8_t priority, uint16_t length, LogicalAddress destination, LogicalAddress source, uint16_t flags, uint16_t dI, uint8_t rT)']]],
  ['subscriptionrequest',['SubscriptionRequest',['../structSubscriptionRequest.html#a3b6895bbe1f616836913b7681b87a852',1,'SubscriptionRequest::SubscriptionRequest(LogicalAddress destination, LogicalAddress source, LogicalAddress mA)'],['../structSubscriptionRequest.html#a1fb7f2d417847d7df52ce23d00f632a6',1,'SubscriptionRequest::SubscriptionRequest(uint8_t version, uint8_t priority, LogicalAddress destination, LogicalAddress source, LogicalAddress mA, uint16_t flags, uint32_t lP, uint16_t dI, uint16_t dRD, uint8_t iI, uint8_t mI, uint8_t sP, uint8_t t)']]]
];
